// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha2;

/**
 * <pre>
 * Specifies how to process the `AssistRequest` messages.
 * </pre>
 *
 * Protobuf type {@code google.assistant.embedded.v1alpha2.AssistConfig}
 */
public  final class AssistConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.assistant.embedded.v1alpha2.AssistConfig)
    AssistConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AssistConfig.newBuilder() to construct.
  private AssistConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AssistConfig() {
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AssistConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            AudioInConfig.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((AudioInConfig) type_).toBuilder();
            }
            type_ =
                input.readMessage(AudioInConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((AudioInConfig) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            AudioOutConfig.Builder subBuilder = null;
            if (audioOutConfig_ != null) {
              subBuilder = audioOutConfig_.toBuilder();
            }
            audioOutConfig_ = input.readMessage(AudioOutConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(audioOutConfig_);
              audioOutConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            DialogStateIn.Builder subBuilder = null;
            if (dialogStateIn_ != null) {
              subBuilder = dialogStateIn_.toBuilder();
            }
            dialogStateIn_ = input.readMessage(DialogStateIn.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dialogStateIn_);
              dialogStateIn_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            DeviceConfig.Builder subBuilder = null;
            if (deviceConfig_ != null) {
              subBuilder = deviceConfig_.toBuilder();
            }
            deviceConfig_ = input.readMessage(DeviceConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(deviceConfig_);
              deviceConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            String s = input.readStringRequireUtf8();
            typeCase_ = 6;
            type_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return AssistantProto.internal_static_google_assistant_embedded_v1alpha2_AssistConfig_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return AssistantProto.internal_static_google_assistant_embedded_v1alpha2_AssistConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AssistConfig.class, Builder.class);
  }

  private int typeCase_ = 0;
  private Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    AUDIO_IN_CONFIG(1),
    TEXT_QUERY(6),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1: return AUDIO_IN_CONFIG;
        case 6: return TEXT_QUERY;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int AUDIO_IN_CONFIG_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  public boolean hasAudioInConfig() {
    return typeCase_ == 1;
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  public AudioInConfig getAudioInConfig() {
    if (typeCase_ == 1) {
       return (AudioInConfig) type_;
    }
    return AudioInConfig.getDefaultInstance();
  }
  /**
   * <pre>
   * Specifies how to process the subsequent incoming audio. Required if
   * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
   */
  public AudioInConfigOrBuilder getAudioInConfigOrBuilder() {
    if (typeCase_ == 1) {
       return (AudioInConfig) type_;
    }
    return AudioInConfig.getDefaultInstance();
  }

  public static final int TEXT_QUERY_FIELD_NUMBER = 6;
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>string text_query = 6;</code>
   */
  public String getTextQuery() {
    Object ref = "";
    if (typeCase_ == 6) {
      ref = type_;
    }
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      if (typeCase_ == 6) {
        type_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The text input to be sent to the Assistant. This can be populated from a
   * text interface if audio input is not available.
   * </pre>
   *
   * <code>string text_query = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTextQueryBytes() {
    Object ref = "";
    if (typeCase_ == 6) {
      ref = type_;
    }
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      if (typeCase_ == 6) {
        type_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUDIO_OUT_CONFIG_FIELD_NUMBER = 2;
  private AudioOutConfig audioOutConfig_;
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  public boolean hasAudioOutConfig() {
    return audioOutConfig_ != null;
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  public AudioOutConfig getAudioOutConfig() {
    return audioOutConfig_ == null ? AudioOutConfig.getDefaultInstance() : audioOutConfig_;
  }
  /**
   * <pre>
   * *Required* Specifies how to format the audio that will be returned.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
   */
  public AudioOutConfigOrBuilder getAudioOutConfigOrBuilder() {
    return getAudioOutConfig();
  }

  public static final int DIALOG_STATE_IN_FIELD_NUMBER = 3;
  private DialogStateIn dialogStateIn_;
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  public boolean hasDialogStateIn() {
    return dialogStateIn_ != null;
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  public DialogStateIn getDialogStateIn() {
    return dialogStateIn_ == null ? DialogStateIn.getDefaultInstance() : dialogStateIn_;
  }
  /**
   * <pre>
   * *Required* Represents the current dialog state.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
   */
  public DialogStateInOrBuilder getDialogStateInOrBuilder() {
    return getDialogStateIn();
  }

  public static final int DEVICE_CONFIG_FIELD_NUMBER = 4;
  private DeviceConfig deviceConfig_;
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  public boolean hasDeviceConfig() {
    return deviceConfig_ != null;
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  public DeviceConfig getDeviceConfig() {
    return deviceConfig_ == null ? DeviceConfig.getDefaultInstance() : deviceConfig_;
  }
  /**
   * <pre>
   * Device configuration that uniquely identifies a specific device.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
   */
  public DeviceConfigOrBuilder getDeviceConfigOrBuilder() {
    return getDeviceConfig();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (AudioInConfig) type_);
    }
    if (audioOutConfig_ != null) {
      output.writeMessage(2, getAudioOutConfig());
    }
    if (dialogStateIn_ != null) {
      output.writeMessage(3, getDialogStateIn());
    }
    if (deviceConfig_ != null) {
      output.writeMessage(4, getDeviceConfig());
    }
    if (typeCase_ == 6) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, type_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (AudioInConfig) type_);
    }
    if (audioOutConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAudioOutConfig());
    }
    if (dialogStateIn_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDialogStateIn());
    }
    if (deviceConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDeviceConfig());
    }
    if (typeCase_ == 6) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AssistConfig)) {
      return super.equals(obj);
    }
    AssistConfig other = (AssistConfig) obj;

    boolean result = true;
    result = result && (hasAudioOutConfig() == other.hasAudioOutConfig());
    if (hasAudioOutConfig()) {
      result = result && getAudioOutConfig()
          .equals(other.getAudioOutConfig());
    }
    result = result && (hasDialogStateIn() == other.hasDialogStateIn());
    if (hasDialogStateIn()) {
      result = result && getDialogStateIn()
          .equals(other.getDialogStateIn());
    }
    result = result && (hasDeviceConfig() == other.hasDeviceConfig());
    if (hasDeviceConfig()) {
      result = result && getDeviceConfig()
          .equals(other.getDeviceConfig());
    }
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 1:
        result = result && getAudioInConfig()
            .equals(other.getAudioInConfig());
        break;
      case 6:
        result = result && getTextQuery()
            .equals(other.getTextQuery());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAudioOutConfig()) {
      hash = (37 * hash) + AUDIO_OUT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getAudioOutConfig().hashCode();
    }
    if (hasDialogStateIn()) {
      hash = (37 * hash) + DIALOG_STATE_IN_FIELD_NUMBER;
      hash = (53 * hash) + getDialogStateIn().hashCode();
    }
    if (hasDeviceConfig()) {
      hash = (37 * hash) + DEVICE_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceConfig().hashCode();
    }
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + AUDIO_IN_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getAudioInConfig().hashCode();
        break;
      case 6:
        hash = (37 * hash) + TEXT_QUERY_FIELD_NUMBER;
        hash = (53 * hash) + getTextQuery().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AssistConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AssistConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AssistConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AssistConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AssistConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AssistConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AssistConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AssistConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AssistConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AssistConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AssistConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AssistConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AssistConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies how to process the `AssistRequest` messages.
   * </pre>
   *
   * Protobuf type {@code google.assistant.embedded.v1alpha2.AssistConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.assistant.embedded.v1alpha2.AssistConfig)
      AssistConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AssistantProto.internal_static_google_assistant_embedded_v1alpha2_AssistConfig_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AssistantProto.internal_static_google_assistant_embedded_v1alpha2_AssistConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AssistConfig.class, Builder.class);
    }

    // Construct using com.google.assistant.embedded.v1alpha2.AssistConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (audioOutConfigBuilder_ == null) {
        audioOutConfig_ = null;
      } else {
        audioOutConfig_ = null;
        audioOutConfigBuilder_ = null;
      }
      if (dialogStateInBuilder_ == null) {
        dialogStateIn_ = null;
      } else {
        dialogStateIn_ = null;
        dialogStateInBuilder_ = null;
      }
      if (deviceConfigBuilder_ == null) {
        deviceConfig_ = null;
      } else {
        deviceConfig_ = null;
        deviceConfigBuilder_ = null;
      }
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return AssistantProto.internal_static_google_assistant_embedded_v1alpha2_AssistConfig_descriptor;
    }

    public AssistConfig getDefaultInstanceForType() {
      return AssistConfig.getDefaultInstance();
    }

    public AssistConfig build() {
      AssistConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public AssistConfig buildPartial() {
      AssistConfig result = new AssistConfig(this);
      if (typeCase_ == 1) {
        if (audioInConfigBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = audioInConfigBuilder_.build();
        }
      }
      if (typeCase_ == 6) {
        result.type_ = type_;
      }
      if (audioOutConfigBuilder_ == null) {
        result.audioOutConfig_ = audioOutConfig_;
      } else {
        result.audioOutConfig_ = audioOutConfigBuilder_.build();
      }
      if (dialogStateInBuilder_ == null) {
        result.dialogStateIn_ = dialogStateIn_;
      } else {
        result.dialogStateIn_ = dialogStateInBuilder_.build();
      }
      if (deviceConfigBuilder_ == null) {
        result.deviceConfig_ = deviceConfig_;
      } else {
        result.deviceConfig_ = deviceConfigBuilder_.build();
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AssistConfig) {
        return mergeFrom((AssistConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AssistConfig other) {
      if (other == AssistConfig.getDefaultInstance()) return this;
      if (other.hasAudioOutConfig()) {
        mergeAudioOutConfig(other.getAudioOutConfig());
      }
      if (other.hasDialogStateIn()) {
        mergeDialogStateIn(other.getDialogStateIn());
      }
      if (other.hasDeviceConfig()) {
        mergeDeviceConfig(other.getDeviceConfig());
      }
      switch (other.getTypeCase()) {
        case AUDIO_IN_CONFIG: {
          mergeAudioInConfig(other.getAudioInConfig());
          break;
        }
        case TEXT_QUERY: {
          typeCase_ = 6;
          type_ = other.type_;
          onChanged();
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AssistConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AssistConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        AudioInConfig, AudioInConfig.Builder, AudioInConfigOrBuilder> audioInConfigBuilder_;
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public boolean hasAudioInConfig() {
      return typeCase_ == 1;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public AudioInConfig getAudioInConfig() {
      if (audioInConfigBuilder_ == null) {
        if (typeCase_ == 1) {
          return (AudioInConfig) type_;
        }
        return AudioInConfig.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return audioInConfigBuilder_.getMessage();
        }
        return AudioInConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder setAudioInConfig(AudioInConfig value) {
      if (audioInConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        audioInConfigBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder setAudioInConfig(
        AudioInConfig.Builder builderForValue) {
      if (audioInConfigBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        audioInConfigBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder mergeAudioInConfig(AudioInConfig value) {
      if (audioInConfigBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != AudioInConfig.getDefaultInstance()) {
          type_ = AudioInConfig.newBuilder((AudioInConfig) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          audioInConfigBuilder_.mergeFrom(value);
        }
        audioInConfigBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public Builder clearAudioInConfig() {
      if (audioInConfigBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        audioInConfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public AudioInConfig.Builder getAudioInConfigBuilder() {
      return getAudioInConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    public AudioInConfigOrBuilder getAudioInConfigOrBuilder() {
      if ((typeCase_ == 1) && (audioInConfigBuilder_ != null)) {
        return audioInConfigBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (AudioInConfig) type_;
        }
        return AudioInConfig.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Specifies how to process the subsequent incoming audio. Required if
     * [AssistRequest.audio_in][google.assistant.embedded.v1alpha2.AssistRequest.audio_in] bytes will be provided in subsequent requests.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AudioInConfig, AudioInConfig.Builder, AudioInConfigOrBuilder>
        getAudioInConfigFieldBuilder() {
      if (audioInConfigBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = AudioInConfig.getDefaultInstance();
        }
        audioInConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AudioInConfig, AudioInConfig.Builder, AudioInConfigOrBuilder>(
                (AudioInConfig) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();;
      return audioInConfigBuilder_;
    }

    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>string text_query = 6;</code>
     */
    public String getTextQuery() {
      Object ref = "";
      if (typeCase_ == 6) {
        ref = type_;
      }
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (typeCase_ == 6) {
          type_ = s;
        }
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>string text_query = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTextQueryBytes() {
      Object ref = "";
      if (typeCase_ == 6) {
        ref = type_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        if (typeCase_ == 6) {
          type_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>string text_query = 6;</code>
     */
    public Builder setTextQuery(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 6;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>string text_query = 6;</code>
     */
    public Builder clearTextQuery() {
      if (typeCase_ == 6) {
        typeCase_ = 0;
        type_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The text input to be sent to the Assistant. This can be populated from a
     * text interface if audio input is not available.
     * </pre>
     *
     * <code>string text_query = 6;</code>
     */
    public Builder setTextQueryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      typeCase_ = 6;
      type_ = value;
      onChanged();
      return this;
    }

    private AudioOutConfig audioOutConfig_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        AudioOutConfig, AudioOutConfig.Builder, AudioOutConfigOrBuilder> audioOutConfigBuilder_;
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public boolean hasAudioOutConfig() {
      return audioOutConfigBuilder_ != null || audioOutConfig_ != null;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public AudioOutConfig getAudioOutConfig() {
      if (audioOutConfigBuilder_ == null) {
        return audioOutConfig_ == null ? AudioOutConfig.getDefaultInstance() : audioOutConfig_;
      } else {
        return audioOutConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder setAudioOutConfig(AudioOutConfig value) {
      if (audioOutConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        audioOutConfig_ = value;
        onChanged();
      } else {
        audioOutConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder setAudioOutConfig(
        AudioOutConfig.Builder builderForValue) {
      if (audioOutConfigBuilder_ == null) {
        audioOutConfig_ = builderForValue.build();
        onChanged();
      } else {
        audioOutConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder mergeAudioOutConfig(AudioOutConfig value) {
      if (audioOutConfigBuilder_ == null) {
        if (audioOutConfig_ != null) {
          audioOutConfig_ =
            AudioOutConfig.newBuilder(audioOutConfig_).mergeFrom(value).buildPartial();
        } else {
          audioOutConfig_ = value;
        }
        onChanged();
      } else {
        audioOutConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public Builder clearAudioOutConfig() {
      if (audioOutConfigBuilder_ == null) {
        audioOutConfig_ = null;
        onChanged();
      } else {
        audioOutConfig_ = null;
        audioOutConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public AudioOutConfig.Builder getAudioOutConfigBuilder() {
      
      onChanged();
      return getAudioOutConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    public AudioOutConfigOrBuilder getAudioOutConfigOrBuilder() {
      if (audioOutConfigBuilder_ != null) {
        return audioOutConfigBuilder_.getMessageOrBuilder();
      } else {
        return audioOutConfig_ == null ?
            AudioOutConfig.getDefaultInstance() : audioOutConfig_;
      }
    }
    /**
     * <pre>
     * *Required* Specifies how to format the audio that will be returned.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        AudioOutConfig, AudioOutConfig.Builder, AudioOutConfigOrBuilder>
        getAudioOutConfigFieldBuilder() {
      if (audioOutConfigBuilder_ == null) {
        audioOutConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            AudioOutConfig, AudioOutConfig.Builder, AudioOutConfigOrBuilder>(
                getAudioOutConfig(),
                getParentForChildren(),
                isClean());
        audioOutConfig_ = null;
      }
      return audioOutConfigBuilder_;
    }

    private DialogStateIn dialogStateIn_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        DialogStateIn, DialogStateIn.Builder, DialogStateInOrBuilder> dialogStateInBuilder_;
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public boolean hasDialogStateIn() {
      return dialogStateInBuilder_ != null || dialogStateIn_ != null;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public DialogStateIn getDialogStateIn() {
      if (dialogStateInBuilder_ == null) {
        return dialogStateIn_ == null ? DialogStateIn.getDefaultInstance() : dialogStateIn_;
      } else {
        return dialogStateInBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder setDialogStateIn(DialogStateIn value) {
      if (dialogStateInBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dialogStateIn_ = value;
        onChanged();
      } else {
        dialogStateInBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder setDialogStateIn(
        DialogStateIn.Builder builderForValue) {
      if (dialogStateInBuilder_ == null) {
        dialogStateIn_ = builderForValue.build();
        onChanged();
      } else {
        dialogStateInBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder mergeDialogStateIn(DialogStateIn value) {
      if (dialogStateInBuilder_ == null) {
        if (dialogStateIn_ != null) {
          dialogStateIn_ =
            DialogStateIn.newBuilder(dialogStateIn_).mergeFrom(value).buildPartial();
        } else {
          dialogStateIn_ = value;
        }
        onChanged();
      } else {
        dialogStateInBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public Builder clearDialogStateIn() {
      if (dialogStateInBuilder_ == null) {
        dialogStateIn_ = null;
        onChanged();
      } else {
        dialogStateIn_ = null;
        dialogStateInBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public DialogStateIn.Builder getDialogStateInBuilder() {
      
      onChanged();
      return getDialogStateInFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    public DialogStateInOrBuilder getDialogStateInOrBuilder() {
      if (dialogStateInBuilder_ != null) {
        return dialogStateInBuilder_.getMessageOrBuilder();
      } else {
        return dialogStateIn_ == null ?
            DialogStateIn.getDefaultInstance() : dialogStateIn_;
      }
    }
    /**
     * <pre>
     * *Required* Represents the current dialog state.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        DialogStateIn, DialogStateIn.Builder, DialogStateInOrBuilder>
        getDialogStateInFieldBuilder() {
      if (dialogStateInBuilder_ == null) {
        dialogStateInBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            DialogStateIn, DialogStateIn.Builder, DialogStateInOrBuilder>(
                getDialogStateIn(),
                getParentForChildren(),
                isClean());
        dialogStateIn_ = null;
      }
      return dialogStateInBuilder_;
    }

    private DeviceConfig deviceConfig_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        DeviceConfig, DeviceConfig.Builder, DeviceConfigOrBuilder> deviceConfigBuilder_;
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public boolean hasDeviceConfig() {
      return deviceConfigBuilder_ != null || deviceConfig_ != null;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public DeviceConfig getDeviceConfig() {
      if (deviceConfigBuilder_ == null) {
        return deviceConfig_ == null ? DeviceConfig.getDefaultInstance() : deviceConfig_;
      } else {
        return deviceConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder setDeviceConfig(DeviceConfig value) {
      if (deviceConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deviceConfig_ = value;
        onChanged();
      } else {
        deviceConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder setDeviceConfig(
        DeviceConfig.Builder builderForValue) {
      if (deviceConfigBuilder_ == null) {
        deviceConfig_ = builderForValue.build();
        onChanged();
      } else {
        deviceConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder mergeDeviceConfig(DeviceConfig value) {
      if (deviceConfigBuilder_ == null) {
        if (deviceConfig_ != null) {
          deviceConfig_ =
            DeviceConfig.newBuilder(deviceConfig_).mergeFrom(value).buildPartial();
        } else {
          deviceConfig_ = value;
        }
        onChanged();
      } else {
        deviceConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public Builder clearDeviceConfig() {
      if (deviceConfigBuilder_ == null) {
        deviceConfig_ = null;
        onChanged();
      } else {
        deviceConfig_ = null;
        deviceConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public DeviceConfig.Builder getDeviceConfigBuilder() {
      
      onChanged();
      return getDeviceConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    public DeviceConfigOrBuilder getDeviceConfigOrBuilder() {
      if (deviceConfigBuilder_ != null) {
        return deviceConfigBuilder_.getMessageOrBuilder();
      } else {
        return deviceConfig_ == null ?
            DeviceConfig.getDefaultInstance() : deviceConfig_;
      }
    }
    /**
     * <pre>
     * Device configuration that uniquely identifies a specific device.
     * </pre>
     *
     * <code>.google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        DeviceConfig, DeviceConfig.Builder, DeviceConfigOrBuilder>
        getDeviceConfigFieldBuilder() {
      if (deviceConfigBuilder_ == null) {
        deviceConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            DeviceConfig, DeviceConfig.Builder, DeviceConfigOrBuilder>(
                getDeviceConfig(),
                getParentForChildren(),
                isClean());
        deviceConfig_ = null;
      }
      return deviceConfigBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.assistant.embedded.v1alpha2.AssistConfig)
  }

  // @@protoc_insertion_point(class_scope:google.assistant.embedded.v1alpha2.AssistConfig)
  private static final AssistConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AssistConfig();
  }

  public static AssistConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AssistConfig>
      PARSER = new com.google.protobuf.AbstractParser<AssistConfig>() {
    public AssistConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AssistConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AssistConfig> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AssistConfig> getParserForType() {
    return PARSER;
  }

  public AssistConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

